@using P3TournamentPlanner.Shared;
@using System;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Authorization;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@page "/ligaer/{leagueID:int}"
<style>
    .page {
        background-image: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), url(/images/csgo-15.jpg);
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        position: absolute;
        top: 0px;
        right: 0px;
        bottom: 0px;
        left: 0px;
    }
</style>
<section class="main">
    <div id="container_1">
        <h1 id="Headline">@league.name</h1>
        <p id="text_1" class="info-text">"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor i
            ncididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat".
        </p>
    </div>
    @*<div class="liga-header">
        <img src="/images/CS-GO-wallpaper.jpg" />
    </div>*@
</section>
<section class="table_container">
    <section class="table_container_background">
        <div class="table_menu">
            <button id="stilling-btn" @onclick="ShowStilling">Stilling</button>
            <button id="kampe-btn" @onclick="ShowKampe">Kampe</button>
            <button id="resultater-btn" @onclick="ShowResultater">Resultater</button>
            <select id="divisioner" class="input-select decorated" @onchange="ChangeDivision">
                @foreach (Division division in divisions)
                {
                    @if (division.divisionID == leagueID && division.divisionID != 0)
                    {
                        <option class="slt-option" selected value="@division.divisionID">Division @division.divisionID</option>
                    }
                    else if (division.divisionID != 0)
                    {
                        <option class="slt-option" value="@division.divisionID">Division @division.divisionID</option>
                    }
                }
            </select>
        </div>
        @if (display == "stilling")
        {
            <style>
                #stilling-btn {
                    background-color: var(--penta-lilla)
                }
            </style>
            <StillingTable ID="divisionID" leagueID="leagueID"/>
        }
        else if (display == "kampe")
        {
            <style>
                #kampe-btn {
                    background-color: var(--penta-lilla)
                }
            </style>
            <MatchList ID="divisionID" search="division" leagueID="leagueID"/>
        }
        else
        {
            <style>
                #resultater-btn {
                    background-color: var(--penta-lilla)
                }
            </style>
            <ResultList ID="divisionID" search="division" leagueID="leagueID"/>
        }
    </section>
</section>

@code {
    [Parameter]
    public int leagueID { get; set; }

    int divisionID = 1;

    List<Division> divisions = new List<Division>();

    League league = new League();

    public string display = "stilling";

    public void ChangeDivision(ChangeEventArgs e)
    {
        divisionID = Convert.ToInt32(e.Value);
        StateHasChanged();
    }

    public void ShowStilling()
    {
        display = "stilling";
        StateHasChanged();
    }

    public void ShowKampe()
    {
        display = "kampe";
        StateHasChanged();
    }

    public void ShowResultater()
    {
        display = "resulater";
        StateHasChanged();
    }

    protected override async Task OnParametersSetAsync()
    {
        divisions = new List<Division>();
        league = new League();

        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://agreeable-meadow-086a24903.azurestaticapps.net/");

        Console.WriteLine("Get Send");
        divisions = await client.GetFromJsonAsync<List<Division>>($"api/Division?leagueID={leagueID}");
        Console.WriteLine("På den anden side");
        Console.WriteLine(divisions);

        league = await client.GetFromJsonAsync<League>($"api/Ligaer/getleague?leagueID={leagueID}");
    }
}