@using P3TournamentPlanner.Shared
@using P3TournamentPlanner.Client.Partials;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@page "/admin/ligaerDivision/{divisionID:int}"

@if (division.teams == null || division == null)
{
    <p>Loading ...</p>
}
else
{
    <div>
    <h2>@division.divisionID. divsion</h2>
        <div class="hold" style=" width:100%; ">
            <table>
                <thead>
                    <tr style=" width: 100%; ">
                        <th>Hold</th>
                        <th>Kontakt person</th>
                        <th>Email</th>
                        <th>Antal spillere</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Team team in division.teams)
                    {
                        <tr @onclick="() => ShowTeam(team)">
                            <td>@team.teamName</td>
                            <td> navn på kontakt person</td>
                            <td>@team.manager.contactinfo.tlfNr</td>
                            <td>@team.divisionID</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tilføjHold">
            <div class="bokse">
                <form class="formBund">
                    <div class="flex">
                        <div class="workPLZ">
                            <select @onchange="TeamToAdd">
                                <option>Vælg hold</option>
                                @foreach (Team team in teamsNotInDivision)
                                {
                                    <option value="@team.teamName">@team.teamName</option>
                                }
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="bokse">
                <button id="genererkampe">Generer Kampe</button>
            </div>
        </div>
        <div class="table_menu">
            <button id="kampe-btn" @onclick='() => ChangeDisplay("kampe")'>Kampe</button>
            <button id="resultater-btn" @onclick='() => ChangeDisplay("")'>Resultater</button>
        </div>
        @if (display == "kampe")
        {
            <style>
                /*#kampe-btn {*/
                background-color: var(--penta-lilla)
                }
            </style>
            <div>
                <div>
                    <h3>Opret ny kamp</h3>
                </div>
                <div>
                    <EditForm Model="match" OnValidSubmit="MatchPost">
                        <div class="form-div">
                            <div class="form-item">
                                <label>Hold 1:</label>
                                <InputSelect @bind-Value="team1Name">
                                    <option selected value="">Vælg første hold</option>
                                    @foreach (Team team in division.teams)
                                    {
                                        <option value="@team.teamName">@team.teamName</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="form-item">
                                <label>Hold 2:</label>
                                <InputSelect @bind-Value="team2Name">
                                    <option value="">Vælg andet hold</option>
                                    @foreach (Team team in division.teams)
                                    {
                                        <option value="@team.teamName">@team.teamName</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="form-item">
                                <label>Tidpunkt: (dato : klokkeslæt)</label>
                                <InputText placeholder="01 / 01 - 2021 : 00:00" @bind-Value="match.startTime"></InputText>
                            </div>

                            <div class="form-item">
                                <label>Værtsklub:</label>
                                <InputSelect @bind-Value="@match.clubHostID">
                                    <option value=0>Vælg værtsklub</option>
                                    @foreach (Team team in division.teams)
                                    {
                                        <option value="@team.clubID">@team.club.name</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="form-item">
                                <label>Map:</label>
                                <InputSelect @bind-Value="match.map">
                                    <option value="">Vælg map</option>
                                    <option value="Ancient">Ancient</option>
                                    <option value="dust2">Dust 2</option>
                                    <option value="Inferno">Inferno</option>
                                    <option value="Mirage">Mirage</option>
                                    <option value="Nuke">Nuke</option>
                                    <option value="Overpass">Overpass</option>
                                    <option value="Vertigo">Vertigo</option>
                                </InputSelect>
                            </div>

                            <div class="form-item">
                                <button type="submit">Opret</button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>

            <MatchList ID="divisionID" search="division" />
        }
        else
        {
            <style>
                #resultater-btn {
                    background-color: var(--penta-lilla)
                }
            </style>
            <ResultList ID="divisionID" search="division" />
        }
    </div>
}

@code{
    [Parameter]
    public int divisionID { get; set; }

    Division division = new Division();

    List<Team> teamsNotInDivision = new List<Team>();

    Team teamToAdd = new Team();

    Match match = new Match();

    string display = "kampe";

    string team1Name = "";

    string team2Name = "";

    public void ChangeDisplay(string d)
    {
        display = d;
    }

    protected override async Task OnInitializedAsync()
    {
        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://localhost:44341/");

        division = await client.GetFromJsonAsync<Division>($"api/Division/getdivision?divisionID={divisionID}");
        division.teams = new List<Team>();

        Console.WriteLine("Get Send");
        division.teams = await client.GetFromJsonAsync<List<Team>>($"api/TeamInformation?divisionID={divisionID}");
        Console.WriteLine("På den anden side");

        await GetTeamsNotInDivision();

        foreach (Team team in division.teams)
        {
            await GetTeamClubs(team);
        }
    }

    public async Task GetTeamsNotInDivision()
    {
        List<Team> tempList = new List<Team>();

        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://localhost:44341/");

        tempList = await client.GetFromJsonAsync<List<Team>>($"api/TeamInformation?divisionID={0}");

        foreach (Team team in tempList)s
        {
            if (team.leagueID == division.leagueID)
            {
                teamsNotInDivision.Add(team);
            }
        }
    }

    public async Task GetTeamClubs(Team team)
    {
        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://localhost:44341/");

        team.club = await client.GetFromJsonAsync<Club>($"api/Klub/klub?clubID={team.clubID}");
    }

    public async Task MatchPost()
    {
        division.teams.Add(AddMatchTeam(team1Name));
        division.teams.Add(AddMatchTeam(team2Name));



        if (division.teams[0].teamName == division.teams[1].teamName)
        {
            await Http.PostAsJsonAsync<Match>("api/Match", match);
        }
    }

    async Task TeamToAdd(ChangeEventArgs eventArgs)
    {
        foreach (Team team in teamsNotInDivision)
        {
            if (team.teamName == eventArgs.Value.ToString())
            {
                teamToAdd = team;
            }
        }

        teamToAdd.divisionID = divisionID;
        await AddTeam();

        await InvokeAsync(OnInitializedAsync);
        StateHasChanged();
    }

    async Task AddTeam()
    {
        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://localhost:44341/");

        await client.PutAsJsonAsync<Team>("api/TeamInformation", teamToAdd);
    }

    public void ShowTeam(Team team)
    {
        NavigationManager.NavigateTo($"/hold/{team.teamID}");
    }

    Team AddMatchTeam(string s)
    {
        foreach (Team team in division.teams)
        {
            if (team.teamName == s)
            {
                return team;
            }
        }
        return new Team();
    }
}