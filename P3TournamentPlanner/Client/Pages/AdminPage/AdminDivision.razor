@using P3TournamentPlanner.Shared
@using P3TournamentPlanner.Client.Partials;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@page "/admin/ligaerDivision/{divisionID:int}"

@if (division.teams == null || division == null)
{
    <p>Loading ...</p>
}
else
{
    <div>,
    <h2>@division.divisionID. divsion</h2>
        <div class="hold" style=" width:100%; ">
            <table>
                <thead>
                    <tr style=" width: 100%; ">
                        <th>Hold</th>
                        <th>Kontakt person</th>
                        <th>Email</th>
                        <th>Antal spillere</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Team team in division.teams)
                    {
                        <tr @onclick="() => ShowTeam(team)">
                            <td>@team.teamName</td>
                            <td> navn på kontakt person</td>
                            <td>@team.manager.contactinfo.tlfNr</td>
                            <td>@team.divisionID</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tilføjHold">
            <div class="bokse">
                <form ="/" method="post" class="formBund">
                    <div class="flex">
                        <div class="workPLZ">
                            <select>
                                <option> Placeholder</option>
                                @foreach (Team team in division.teams)
                                {
                                    <option> @team.teamName </option>
                                }
                            </select>
                        </div>
                        <div class="tilføj">
                            <button>Tilføj hold</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="bokse">
                <button id="genererkampe">Generer Kampe</button>
            </div>
        </div>
        <div class="table_menu">
            <button id="kampe-btn" @onclick='() => ChangeDisplay("kampe")'>Kampe</button>
            <button id="resultater-btn" @onclick='() => ChangeDisplay("")'>Resultater</button>
        </div>
        <div class="streg"></div>
        @if (display == "kampe")
        {
            <style>
                /*#kampe-btn {*/
                background-color: var(--penta-lilla)
                }
            </style>
            <MatchList ID="divisionID" search="division" />
        }
        else
        {
            <style>
                #resultater-btn {
                    background-color: var(--penta-lilla)
                }
            </style>
            <ResultList ID="divisionID" search="division" />
        }
    </div>
}

@code{
    [Parameter]
    public int divisionID { get; set; }

    Division division = new Division();

    string display = "kampe";

    public void ChangeDisplay(string d)
    {
        display = d;
    }

    protected override async Task OnInitializedAsync()
    {
        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://localhost:44341/");

        division = await client.GetFromJsonAsync<Division>($"api/Division/getdivision?divisionID={divisionID}");
        division.teams = new List<Team>();

        Console.WriteLine("Get Send");
        division.teams = await client.GetFromJsonAsync<List<Team>>($"api/TeamInformation?divisionID={divisionID}");
        Console.WriteLine("På den anden side");
    }

    public void ShowTeam(Team team)
    {
        NavigationManager.NavigateTo($"/hold/{team.teamID}");
    }
}
