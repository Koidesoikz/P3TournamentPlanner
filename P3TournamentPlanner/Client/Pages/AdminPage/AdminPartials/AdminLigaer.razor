@using P3TournamentPlanner.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
<h1>Ligaer</h1>
<div id="matchSection" style="width: 100%">
    <table class="boxes">
        <thead>
            <tr>
                <th>  Liga Navn  </th>
                <th>  Spil  </th>
                <th>  Antal Hold  </th>
                <th>  Status  </th>
            </tr>
        </thead>
        <tbody>
            @foreach(League liga in ligas) {

                <tr @onclick="() => ShowLiga(liga.leageID)">
                    <td>  @liga.name  </td>
                    <td>  @liga.game.name  </td>
                    <td> @liga.teamAmount</td>
                    <td>  @liga.archiveFlag  </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public int ID { get; set; }

    public string MapSti = "Mirage";

    List<League> ligas = new List<League>();

    //Auth Var
    bool isAuth = false;
    string roleRequirement = "Administrator";

    protected override async Task OnInitializedAsync() {

        try {
            isAuth = await Http.GetFromJsonAsync<bool>($"api/authentication?role={roleRequirement}");
        }
        catch(AccessTokenNotAvailableException exception) {
            //idfk... Redirect eller sådan noget xd
            Console.WriteLine("Exeption Hit!");
        }


        if(isAuth) {
            Console.WriteLine("lesgo!");
        } else {
            Console.WriteLine("Sadge");
        }
    }

    protected override async Task OnParametersSetAsync() {
        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://localhost:44341/");

        Console.WriteLine("Get Send");
        ligas = await client.GetFromJsonAsync<List<League>>("api/Ligaer");
        Console.WriteLine("På den anden side");
    }

    public void ShowLiga(int leagueID)
    {
        NavigationManager.NavigateTo($"/admin/ligaer/{leagueID}");
    }
}