@using P3TournamentPlanner.Shared;
@using System;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Authorization;
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject Services.MatchService MatchService
<div id="matchSection" style="width: 100%">
    @foreach (Match match in matches)
    {
        @if (match.playedFlag == 1)
        {
            <div class="match-container" @onclick="() => ShowMatch(match)">
                <style>
                    .match-container {
                        background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(/images/@MapSti);
                    }
                </style>
                <div id="topPart">
                    <h1> @match.teams[0].teamName</h1>
                    <h1> @match.results </h1>
                    <h1> @match.teams[1].teamName</h1>
                </div>
                <div id="lowPart">
                    <h3> @match.startTime</h3>
                    <h3>
                        @foreach (Club club in clubs)
                        {
                            @if (club.clubID == match.clubHostID.ToString())
                            {
                                @club.address
                            }
                        }
                    </h3>
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter]
    public int ID { get; set; }

    public string MapSti = "NordjyskligaCover2.jpg";

    List<Match> matches = new List<Match>();
    List<Club> clubs = new List<Club>();

    protected override async Task OnParametersSetAsync()
    {
        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://localhost:44341/");

        Console.WriteLine("Get Send");
        matches = await client.GetFromJsonAsync<List<Match>>("Match?division=" + ID);
        Console.WriteLine("På den anden side");
        Console.WriteLine(matches);

        Console.WriteLine("Get Send");
        clubs = await client.GetFromJsonAsync<List<Club>>("Klub");
        Console.WriteLine("På den anden side");
        Console.WriteLine(clubs);
    }

    public void ShowMatch(Match match)
    {
        MatchService.match = match;
        NavigationManager.NavigateTo($"/resultat/{match.matchID}");
    }
}
