@using P3TournamentPlanner.Shared;
@using System;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Authorization;
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@inject Services.MatchService MatchService
<div id="matchSection" style="width: 100%">
    @foreach (Match match in matches)
    {
        @if (match.playedFlag == 0)
        {
            <div class="match-container">
                <div class="match-container-background" @onclick="() => ShowMatch(match)">
                    <div id="topPart">
                        <h1 class="match-header"> @match.teams[0].teamName</h1>
                        <h1 class="match-header" id="center"> VS </h1>
                        <h1 class="match-header"> @match.teams[1].teamName</h1>
                    </div>
                    <div id="lowPart">
                        <h3> @match.startTime</h3>
                        <h3>
                            @foreach (Club club in clubs)
                            {
                                @if (club.clubID == match.clubHostID.ToString())
                                {
                                    @club.address
                                }
                            }
                        </h3>
                    </div>
                </div>
            </div>
        }
    }
</div>

<div id="matchSection" style="width: 100%">
    @foreach (Match match in matches)
    {
        @if (match.playedFlag == 0)
        {
            <div class="match-container">
                <div class="match-container-background" @onclick="() => ShowMatch(match)">
                    <div id="topPart">
                        <h1 class="match-header"> @match.teams[0].teamName</h1>
                        <h1 class="match-header" id="center"> VS </h1>
                        <h1 class="match-header"> @match.teams[1].teamName</h1>
                    </div>
                    <div id="lowPart">
                        <h3> @match.startTime</h3>
                        <h3>
                            @foreach (Club club in clubs)
                            {
                                @if (club.clubID == match.clubHostID.ToString())
                                {
                                    @club.address
                                }
                            }
                        </h3>
                    </div>
                </div>
            </div>
        }
    }
</div>

<form>
    <label>matchID</label>
    <input type="number" @bind-value="matchPost.matchID" />

    <label>Played</label>
    <input type="number" @bind-value="matchPost.playedFlag" />

    <label>Start time</label>
    <input type="text" @bind-value="matchPost.startTime" />

    <label>Result</label>
    <input type="text" @bind-value="matchPost.results" />

    <label>Host</label>
    <input type="number" @bind-value="matchPost.clubHostID" />

    <label>Server</label>
    <input type="text" @bind-value="matchPost.serverIP" />

    <label>Map</label>
    <input type="text" @bind-value="matchPost.map" />

    <button type="button" @onclick="PostMatch">Gem</button>
</form>

@code {
    [Parameter]
    public int ID { get; set; }

    public string MapSti = "mirage.jpg";

    List<Match> matches = new List<Match>();
    List<Club> clubs = new List<Club>();

    Match matchPost = new Match();

    protected override async Task OnParametersSetAsync()
    {
        HttpClient client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        client.BaseAddress = new Uri("https://localhost:44341/");

        Console.WriteLine("Get Send");
        matches = await client.GetFromJsonAsync<List<Match>>("api/match?division=" + ID);
        Console.WriteLine("På den anden side");
        Console.WriteLine(matches);

        Console.WriteLine("Get Send");
        clubs = await client.GetFromJsonAsync<List<Club>>("api/Klub");
        Console.WriteLine("På den anden side");
        Console.WriteLine(clubs);
    }

    public void ShowMatch(Match match)
    {
        MatchService.match = match;
        NavigationManager.NavigateTo($"/kamp/{match.matchID}");
    }

    public void PostMatch()
    {
        Console.WriteLine(matchPost.matchID);
        Console.WriteLine(matchPost.playedFlag);
        Console.WriteLine(matchPost.startTime);
        Console.WriteLine(matchPost.results);
        Console.WriteLine(matchPost.clubHostID);
        Console.WriteLine(matchPost.serverIP);
        Console.WriteLine(matchPost.map);
    }
}
